name: aws-depolyment

inputs:
  AWS_REGION:
    required: true
  EKS_CLUSTER_NAME:
    required: true
  AWS_ACCESS_KEY_ID:
    required: true
  AWS_SECRET_ACCESS_KEY:
    required: true

  SERVICE_NAMESPACE:
    required: false
    default: st-service

  DEPLOYMENT_INGRESS:
    required: false
    default: 0
  
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2

    - name: Download ConfigMap Artifact
      uses: actions/download-artifact@v3
      with:
        name: deployment-env
        path: ./deployment-env

    - name: Download Deployment Artifact
      uses: actions/download-artifact@v3
      with:
        name: deployment-application
        path: ./deployment-application

    - name: Download Deployment Artifact
      uses: actions/download-artifact@v3
      with:
        name: deployment-ingress
        path: ./deployment-ingress

    - name: Deploy
      uses: safe2008/eks-actions@v0.0.4
      if: ${{ DEPLOYMENT_INGRESS == 1 }}
      env:
        aws_access_key_id: ${{ inputs.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
        aws_region: ${{ inputs.AWS_REGION }}
        cluster_name: ${{ inputs.EKS_CLUSTER_NAME }}
      with:
        args: |
          kubectl get namespace | grep -q "^${{ inputs.SERVICE_NAMESPACE }} " || kubectl create namespace ${{ inputs.SERVICE_NAMESPACE }}

          kubectl apply -f ./deployment-env/config-map.yaml
          kubectl apply -f ./deployment-application/application.yaml
          ${{ DEPLOYMENT_INGRESS == 0 }} && echo "NO INGRESS" || kubectl apply -f ./deployment-intress/intress.yaml
